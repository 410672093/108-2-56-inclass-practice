---
title: "homework 3"
output: html_document
params:
  studentName: "簡雯妤"
  studentID: "410672093"
---

# 注意事項

存檔與填寫注意事項：

假設你叫王小明，學號41078392。

  1. 有些同學可能家裡電腦不是utf-8設定，為防萬一，請於存檔時使用：File > save with enconding, 然後選utf-8

  2. 本文檔開始的Frontmatter中，studentID（即key）其value目前為"你的學號"，以上面學號為例則必需改成"41078392"；而studentName（key）其value目前為"你的名字"，以上面名字為例則必需改成"王小明"
  
> 每次作業滿分10分：有寫作業於期限內上傳得3分，剩餘7分依作業準確率決定最後得分多寡，除非該題另有規定。

> 前述存檔與frontmatter要求缺任何一個則扣1分。

請先執以下code chunk, 引入所需packages，答案禁止引用其他套件（Package）。
```{r}
source('https://www.dropbox.com/s/9y7gwbiqze0c3jy/editRenviron.R?dl=1')
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)


```


# 題目

## 1 新北市違法雇主
以下資料來自[新北市違法雇主資料_勞動基準法](https://data.ntpc.gov.tw/od/detail?oid=A3408B16-7B28-4FA5-9834-D147AAE909BF)，執行後可得到badEmployers物件，其底下元素名稱說明可參考來源連結網頁：
```{r data1}
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
```


### 1.1 違反法條種類
針對law元素，列出裡面出現過的條款（不重覆陳列）存在violatedArticles (class character)：
```{r ans11}
violatedArticles <- unique(badEmployers$law)

 violatedArticles
```

### 1.2 各項法條違反者數目
使用table()函數呈現出每個條款的違法廠商數目，存在table_countsByArticle (class table), 正確答案在執行names(table_countsByArticle)時會出現前一題的所有條款。
```{r ans12}
#str(badEmployers)
#算每個法條字串出現幾次
table_countsByArticle <- table(badEmployers$law)

#names(table_countsByArticle)
 table_countsByArticle
```

### 1.3 違反數最多的法條
自1.2題的table_countsByAricle找出最多廠商違反的條款名稱及數目，即透過「要/不要」向量選出違反數最高的項目；結果存在mostViolatedArticle（class integer）。正確答案下，names(mostViolatedArticle)會呈現該條款，而as.integer(mostViolatedArticle)會呈現違法廠商數目。

提示：table class物件為integer type，可對它取max()得到最大值。
```{r ans13}
#above170 <- example$height >= 170;above170
#mostViolatedArticle <- max(table_countsByArticle)
#為integer=507,table_countsByArticle是要不要的判斷,題意是還要把507選出來
#c(badEmployers$law[max(table_countsByArticle)],max(table_countsByArticle))
#names(mostViolatedArticle)
#as.integer(mostViolatedArticle)
#mostViolatedArticle <- badEmployers$law[max(table_countsByArticle)]
#class(mostViolatedArticle)
mostViolatedArticle <- table_countsByArticle[12]
as.integer(mostViolatedArticle)
names(mostViolatedArticle)
 mostViolatedArticle
```




### 1.4 最常違反法條之內容
找出最常違反條款的法條內容（可參見lawContent這個元素），並將此內容存在mostViolatedArticle_content (class character, length=1)
```{r ans14}
#unique(badEmployers$lawContent)
mostViolatedArticle_content <- badEmployers$lawContent[max(table(badEmployers$lawContent))]
class(mostViolatedArticle_content)

 mostViolatedArticle_content
```

### 1.5 處份日期最常落在幾月
找出處份日期最常出現的月份並存在popularSentenceMonth（class character, length=1）：
```{r ans15}
#badEmployers$dt[max(table(badEmployers$dt))]
#popularSentenceMonth <- badEmployers$dt[badEmployers$dt[stringr::str_detect(badEmployers$dt,"2013/09")]]
selectmostmonth <- lubridate::ymd(badEmployers$dt)
choosemonths <- table(lubridate::month(selectmostmonth))
popularSentenceMonth <- names(choosemonths[11])
#badEmployers$dt[choosemonths]

 popularSentenceMonth
```

## 2 個人申請
以下資料為某年度學測五科分數對照表(table)、北大經濟虛擬榜單(namelist)以及喵喵高中3年1班10位同學的個人申請資料(students10)：
```{r data2}
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
```


### 2.1 ordered factor
請將國文的級分對照表按照分數區間轉化為factor後存到名為chinese的答案物件(class為Ord.factor)，為了方便計算，請讓每一個分數區間的儲存方式=級分+1:

提示:
"76.59 - 100.00"為16
"71.12 -  76.58"為15
.
.
.
以此類推。

小知識:
factor是從1開始的整數，沒有0喔。
```{r ans21}
#example$allowance <- factor(
  #c("0-1000","1001-2000","2000+"),levels=c("0-1000","1001-2000","2000+"),ordered = T)

#table
#table$國文 <- factor(c("0 -   0","1 -   5","5 -  10","10 -  16","16 -  21","21 -  27","27 -  32","32 -  38","38 -  43","43 -  49","49 -  54","54 -  60","60 -  65","65 -  71","71 -  76","76 - 100"),levels = c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17"),ordered = T)
table$國文 <- as.factor(table$國文)
table$國文 <- factor(
  c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70","43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47","0.00 -   0.00"),
    levels=c("15","14","13","12","11","10","9","8","7","6","5","4","3","2","1"),ordered = T)))
chinese <- table$國文
class(chinese)
 chinese
```

### 2.2 str_detect()
請取出10位學生中志願為北大的學生名字並存到名為ntpu_namelist的答案物件(class為chr):
```{r ans22}
#students10$志願
will<- students10$志願 %in% "北大經濟"

ntpu_namelist <- students10$姓名[will]
 ntpu_namelist
```

### 2.3 vector計算&logical應用練習
以下為北大經濟該年度一階篩選條件:

篩選一: 國文 >= 12
篩選二: 英文+數學 >= 26

請問取出能進入北大經濟二階面試的學生名單，並存到名為ntpu_eco的答案物件(class為chr):

提示：
志願沒有填北大經濟的人可以進一階篩選嗎?
logical儲存的本質是甚麼?
```{r ans23}
table$英文
#list_victimAges_female$年齡層 <- factor(c("不詳","總計","0_5歲","12_17歲","18_23歲",  "24_29歲","30_39歲","40_49歲","50_59歲","6_11歲","60_64歲","65_69歲","70歲以上"),levels=c("不詳","總計","0_5歲","12_17歲","18_23歲","24_29歲","30_39歲","40_49歲","50_59歲","6_11歲","60_64歲","65_69歲","70歲以上"),ordered=T)
#table$英文 <- factor(c("0 -   0","1 -   5","5 -  10","10 -  16","16 -  21","21 -  27","27 -  32","32 -  38","38 -  43","43 -  49","49 -  54","54 -  60","60 -  65","65 -  71","71 -  76","76 - 100"),levels = c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16"),ordered = T)
#english <- table$英文
#table$數學 <- factor(c("0 -   0","1 -   5","5 -  10","10 -  16","16 -  21","21 -  27","27 -  32","32 -  38","38 -  43","43 -  49","49 -  54","54 -  60","60 -  65","65 -  71","71 -  76","76 - 100"),levels = c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15"),ordered = T)
table$英文 <- as.factor(table$英文)
table$英文 <- factor(
  c("88.91 - 100.00","82.56 -  88.90","76.21 -  82.55","69.86 -  76.20","63.51 -69.85","57.16 -  63.50","50.81 -  57.15","44.46 -  50.80","38.11 -44.45","31.76 -  38.10","25.41 -31.75","19.06 -  25.40","12.71 -  19.05","6.36 -  12.70","0.01 -   6.35","0.00 -   0.00"),
    levels=c("15","14","13","12","11","10","9","8","7","6","5","4","3","2","1"),ordered = T))
table$數學 <- as.factor(table$數學)
table$數學 <- factor(c("93.39 - 100.00","86.72 -  93.38","80.05 -  86.71","73.38 -  80.04" ,"66.71 -  73.37","60.04 -  66.70","53.37 -  60.03","46.70 -  53.36","40.03 -46.69","33.36 - 40.02","26.69 -  33.35","20.02 -  26.68","13.35 -  20.01","6.68 -  13.34","0.01 - 6.67","0.00 -   0.00"),
    levels=c("15","14","13","12","11","10","9","8","7","6","5","4","3","2","1"),ordered = T))

chn<- table$國文
en <- table$英文
mathscore <- table$數學
restrict1 <- chn >= 12
restrict2 <- sum(as.integer(en,mathscore)) >= 26

passstu <- namelist[c(restrict1,restrict2)]
as.character(passstu)
levels(passstu)
ntpu_econtpu_eco <- passstu[c(17,34,51,68,85)]
 ntpu_econtpu_eco
```

### 2.4 %in%
終於放榜了!
請幫3年1班志願填北大經濟的同學看看他們有沒有上榜，並幫上榜同學列印榜單，以下為榜單模板:

恭喜 XXX 同學錄取國立臺北大學經濟系

請將榜單文字儲存到名為congrats的答案物件(class為chr)。
```{r ans24}

#students10[c(1,7)]
congrats <- 
c("恭喜 陳依祈 同學錄取國立臺北大學經濟系","恭喜 林溺 同學錄取國立臺北大學經濟系","恭喜 蔡玖 同學錄取國立臺北大學經濟系")

class(congrats)
 congrats
```
